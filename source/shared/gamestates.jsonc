/*
 *------
 * BGA framework: Gregory Isabelli & Emmanuel Colin & BoardGameArena
 * Dale implementation : Â© Bart Swinkels
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 */
/*
 * This file is enforced by schema file located at 'bga-ts-template/template/schema'. If you are using VS Code, this schema file will be linked to this file automatically if 'generate-vscode-files' is set to true in 'template.config.jsonc. Hover over any fields for more information.
 *
 * Game state machine is a tool used to facilitate game development. Please check the BGA Studio presentation about game state to understand this, and associated documentation.
 *
 * !! It is not a good idea to modify this file when a game is running !!
 */
{
	"$schema": "../../node_modules/bga-ts-template/schema/gamestates.schema.json",

	// The initial state. Please do not modify.
	"1": {
		"name": "gameSetup",
		"description": "",
		"type": "manager",
		"action": "stGameSetup",
		"transitions": { "": 30 }
	},

	//////////////// Game Setup (+choosing animalfolk sets) ////////////////

	// "2": {
	// 	"name": "dummmy",
	// 	"description": "${actplayer} must play a card or pass",
	// 	"descriptionmyturn": "${you} must play a card or pass",
	// 	"type": "activeplayer",
	// 	"possibleactions": {
	// 		"playCard": [{ "name": "card_id", "type": "AT_int" }],
	// 		"pass": []
	// 	},
	// 	"transitions": { "playCard": 2, "pass": 2 }
	// },

	//////////////// Main Cycle ////////////////

	"30": {
		"name": "playerTurn",
		"description": "${actplayer} must take an action",
		"descriptionmyturn": "${you} must (a) purchase a card, (b) play a technique, (c) build a stack, or (d) pass",
		"type": "activeplayer",
		"possibleactions": {
			// "actMarketAction": [],
			// "actTechniqueAction": [],
			// "actStallAction": [],
			"actRequestInventoryAction": []
		},
		"transitions": { "trInventory": 40 }
	},

	"40": {
		"name": "inventory",
		"description": "${actplayer} may discard any number of cards",
		"descriptionmyturn": "${you} may discard any number of cards",
		"type": "activeplayer",
		"possibleactions": {
			"actInventoryAction": [
				{"name": "ids", "type": "AT_numberlist"} //TODO: change this
			]
		},
		"transitions": { "trNextPlayer": 41 }
	},

	"41": {
		"name": "nextPlayer",
		"description": "",
		"type": "game",
		"action": "stNextPlayer",
		"updateGameProgression": true,
		"transitions": { "trNextPlayer": 30 }
	},

/*
	// Examples:
	
	"2": {
		"name": "nextPlayer",
		"description": "",
		"type": "game",
		"action": "stNextPlayer",
		"updateGameProgression": true,
		"transitions": { "endGame": 99, "nextPlayer": 10 }
	},

	"10": {
		"name": "playerTurn",
		"description": "${actplayer} must play a card or pass",
		"descriptionmyturn": "${you} must play a card or pass",
		"type": "activeplayer",
		"possibleactions": [ "playCard", "pass" ],
		"transitions": { "playCard": 2, "pass": 2 }
	},
*/

	// Final state.
	// Please do not modify (and do not overload action/args methods}.
	"99": {
		"name": "gameEnd",
		"description": "End of game",
		"type": "manager",
		"action": "stGameEnd",
		"args": "argGameEnd",
		/* TODO: get the arguments that are passed at the end of a game.. */
		"argsType": "object"
	}
}