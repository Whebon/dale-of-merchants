/*
 *------
 * BGA framework: Gregory Isabelli & Emmanuel Colin & BoardGameArena
 * Dale implementation : © Bart Swinkels
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 */

/*
	This is the CSS stylesheet of your game User Interface.
	
	Styles defined on this file will be applied to the HTML elements you define in your
	HTML template (*.tpl), and to HTML elements you create dynamically (in dale.js).
	
	Usually, you are using CSS to:
	
	1°) define the overall layout of your game (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

	2°) create your CSS-sprites: All images of your games should be gathered into a small number of image files. Then, using background-image and background-position CSS properties, you create HTML blocks that can  display these images correctly (see example below).
	
	3°) ... anything else: It is really easy to add and remove CSS classes dynamically from your Javascript with dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why, very often, using CSS classes for the logic of your user interface allow you to do complex thing easily.
*/

.clickable {
	transition: all .2s ease-in-out; 
}

.clickable:hover {
	cursor: pointer;
	transform: scale(1.05); 
}

.stockitem {
	z-index: 3;
	border-radius: 10px;
}

.placeholder {
	background-image: url('img/placeholder.png');
	border-radius: 10px;
	position: absolute;
}

.card-slot-selected {
	border-radius: 10px;
	border: 1px solid black;
}

.card {
	background-image: url('img/cards.jpg');
	border-radius: 10px;
	position: absolute;
}

#market-board-background {
    background-image: url(img/shop_day.jpg);
	background-repeat: no-repeat;
	position: relative;
	//min-width: 3000px; //large enough to always fit the full the background image (2717px) + a little bit of margin for right item_margin of the right card
    // background-size: contain; /* Ensures the background image fits within the div, maintaining its aspect ratio */
}

#market-board {
	position: relative;
}

.stall-wrap {
	display: flex;
	flex-direction: column;
	align-items: center;
	margin-top: 0px;
	margin-bottom: 0px;
	margin-left: 10px;
	margin-right: 10px;
	padding-top: 0px;
	max-width: fit-content;

	.name {
		margin: 10px;
		white-space: nowrap;
	}

	.stall-container {
		display: flex;
		justify-content: space-between;
		max-width: fit-content;
	}

	.stack-container {
		flex: 1 1;
		min-width: 0; /* Ensure items can shrink below their content width */
	}
}

.pile-container {
	display: flex;
	flex-direction: column;
	align-items: center;
	margin-top: 0px;
	margin-bottom: 0px;
	margin-left: 10px;
	margin-right: 10px;
	padding-top: 0px;
	width: max-content;

	.name {
		margin: 10px;
		white-space: nowrap;
	}

	.size {
		z-index: 500; //must be higher than all sliding cards
		position: absolute;
		font-weight: bold;
		top: 4%;	
		left: 82%;
		transform: translateX(-50%);
		color: white;
		background-color: rgba(0, 0, 0, 0.62); /* Optional, for better visibility */
		text-align: center;
		padding: 5px 10px;
		width: 40px;
		font-size: 16px;
		margin: auto;
		padding-top: 2px;
		padding-bottom: 2px;
	}

	.pile {
		position: relative;
	}
}

.card-tooltip{
	.text {
		max-width: 300px;
	}
}

/*
	Example of CSS sprites (a black token and a white token, 20x20px each, embedded in the same "tokens.png" 40x20px image):

	.white_token {
		background-image: url('img/tokens.png');
		background-position: 0px 0px;
	}
	.black_token {
		background-image: url('img/tokens.png');
		background-position: -20px 0px;
	}
	.token {
		width: 20px;
		height: 20px;
		background-repeat: none;
	}
*/